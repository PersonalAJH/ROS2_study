ROS2 에서는 복수 개의 노드를 실행 시킬 때 데이터 통신을 위한 작업으로 인한 전체적인 성능 저하와 메모리 사용량이 늘어난 다는 단점이 있다. 이를 해결하기 위해
ROS1 에서는 Nodelets 패키지를 제공한다. Node lets 패키지는 단일 프로세스 에서 동작되는 복수 개의 노드들을 위한 zero-copy
를 제공하여 퍼블리셔와 섭스크라이버 간의 데이터 ㅗㅇ신에 잇어 고정된 메모리 공간을 사용하도록 한다.

ROS2 에서는 복수 개의 노드 사용시 시스템의 성능 저하를 막기 위해 IPC(Intra-Process-Communication) 을 사용한다.

Pulisher Node가 1개의 프로세서가 실행되고 Subscriber도 1개의 프로세서가 실행되면 
Pub Node 에서 Sub node 까지 이동하기 위해 메모리 복사가 3번이 필요한데(더 많은 Data를 옮기게 되면 더 많아지게 됨)
ROS2 에서는 "IPC"를 이용하여 Pub node 와 Sub node 가 1개의 프로세서 안에서 작동하게 하므로 그런 매모리 복사가 필요하지 않게된다.
-> Threading 과 Process의 차이라고 생각하면 될듯

IPC는 rclcpp 에서만 지원한다

이미지의 경우 데이터가 크기 떄문에 IPC를 제공하지않는다면 그만큼 메모리 손실이 많아지게 되는건데 IPC 기능을 이용하여 
이미지 파이프라인을 구성하면 해당 이미지를 처리하느기 위한 노드가 복수 개여도 그 메모리가 이미지 크기로 고정되어 메모리의 효율적인 사용이 가능

https:://github.com/ros2/demos/blob/foxy/intra_process_demo/include/image_pipeline/camera_node.hpp
https:://github.com/ros2/demos/blob/foxy/intra_process_demo/include/image_pipeline/watermark_node.hpp
https:://github.com/ros2/demos/blob/foxy/intra_process_demo/include/image_pipeline/image_view_node.hpp










노드와 노드렛 (Node and nodelet)
- Node 
    1. 계산을 수행하는 하나의 프로세스이며 단순한 동작만을 수행하고 다른 노드와 독립적인 특징을 가진다. 
    2. 장점으로는 전체 시스템이 노드 하나의 오류만으로 무너지지 않고 한가지 기능에 집중하여 빠르게 개발될 수 있다는 점과 모듈성, 재활용성 과 같은 장점을 가지고 있다. 
    3. ' 일반적 ' 으로는 하나의 로봇은 여러개의 노드로 이루어 진다.
    4. !! 단일 컴퓨팅 시스템에서 (SBC 와 같은) 여러개의 노드를 실행시킬때 데이터 통신을 위한 작업으로 인한 전체적인 성능 저하와 메모리 사용량이 늘어난다는 단점이 있다. -> 이를 해결하기 위해 ROS1 에서 Nodelets 패키지를 제공한다. 
    5. Nodelets 패키지는 단일 프로세스에서 동작되는 복수개의 노드들을 위한 zero-copy 를 제공하여 publisher 와 subscriber 간의 데이터 통신에 있어서 고정된 메모리 공간을 사용하도록 하는 기능을 가지고 있다. (Zero-copy는 데이터를 전송할 때 중간 버퍼링이나 추가적인 데이터 복사 작업 없이 메모리에서 메모리로 직접 데이터를 전송하는 기법을 말합니다.)




기본적인 내용은 이렇다 
 - 우선 하나의 퍼블리셔와 하나의 섭스크라이버를 만들기 위해서는 프로세스를 2개를 만들어서 하는게 일반적이다 (리눅스로 치면 2개의 터미널을 열어서하는 것)
 - 하나의 프로세스에서 다른 프로세스로 데이터를 넘길때는 ROS2 에서는 DDS 서버로(ROS1 에서는 아마 ROS core) 데이터를 넘기고 다시 그 데이터를 받아와야 한다. ()
 - 펍 프로세스에서 -> DDS writer -> DDS reader -> Sub 프로세스 까지 옮기기까지 데이터를 3번 copy 해 가야함 하지만 IPC를 사용하면 이 메모리 사용을 줄일 수 있음 
 - 가장 쉽게 이해되는건 프로세스와 thread 의 차이와 같다고 보면된다. 프로세스는 같은 변수를 사용해서 그 변수가 다른 프로세스에 쓰일수 없지만 스레드는 가능 그래서 이 IPC 라는건 스레드 처럼 쓰겠다는 의미임

 코드는 책이나 opensource를 찾아보는게 나을것 같고  thread 와 같이 하나의 소스에서 ? 모두 작성함 두개의 노드를 생성하지만 main문이 하나에서 돌아감
 이미지와 같은 데이터를 복사하기에 용량이 큰 곳에서 더 유용하게 사용할 수 있음